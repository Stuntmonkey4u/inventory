---
# Play 1: Collect forensic data from remote hosts

- name: Collect forensic inventory data
  hosts: all
  gather_facts: true # yaml[truthy]
  tasks:

    - name: Ensure temporary report directory exists on controller
      ansible.builtin.file:
        path: "{{ report_dir | default('/tmp/reports') }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true
      become: true

    - name: Gather Service Information
      tags: services
      block:
        - name: Gather all system service statuses (for "All Services")
          ansible.builtin.command: "systemctl list-unit-files --type=service --no-pager" # Use command; systemd module is an option for deeper integration.
          register: services
          changed_when: false
          ignore_errors: true # yaml[truthy]

        - name: Gather verified running system services
          ansible.builtin.command: "systemctl list-units --type=service --state=running --no-pager --no-legend --plain" # systemd module is an option.
          register: running_services
          changed_when: false
          ignore_errors: true # yaml[truthy]

    - name: Gather Package Information
      tags: packages
      block:
        - name: Gather package facts
          ansible.builtin.package_facts:
          ignore_errors: true # yaml[truthy]

        - name: Get upgradable packages (apt systems)
          ansible.builtin.shell: "set -o pipefail && apt list --upgradable 2>/dev/null | grep -v 'Listing...'" # risky-shell-pipe
          register: upgradable_packages
          failed_when: false # Task doesn't fail if no upgradable packages or command fails
          changed_when: false

    - name: Gather Docker Information
      tags: docker
      block:
        - name: Check if Docker is installed
          ansible.builtin.shell: |
            if command -v docker >/dev/null 2>&1; then
              docker --version
              exit 0
            else
              exit 127
            fi
          register: docker_check
          changed_when: false
          ignore_errors: true # yaml[truthy]

        - name: Get running Docker containers
          ansible.builtin.shell: "docker ps --format '{{ '{{' }}.Names}}: {{ '{{' }}.Image}}'" # noqa jinja[invalid] <- Linter struggles with Go template
          register: docker_containers
          when: docker_check.rc == 0
          changed_when: false
          ignore_errors: true # yaml[truthy]

    - name: Gather Network Information
      tags: network
      block:
        - name: Get listening ports
          ansible.builtin.shell: |
            if command -v ss >/dev/null; then
              ss -tulnp
            elif command -v netstat >/dev/null; then
              netstat -tulnp
            else
              echo "No tool found to list ports"
            fi
          register: listening_ports
          changed_when: false
          ignore_errors: true # yaml[truthy]

        - name: Gather Firewall Information
          tags: firewall
          block:
            - name: Get firewall rules (Check for iptables or ufw)
              ansible.builtin.shell: |
                if command -v iptables > /dev/null; then
                  iptables -L -n -v
                elif command -v ufw > /dev/null; then
                  ufw status
                else
                  echo "No iptables or ufw found"
                fi
              register: firewall_rules
              changed_when: false
              ignore_errors: true # yaml[truthy]

    - name: Gather User and Log Information
      tags: user_logs
      block:
        - name: Get login history
          ansible.builtin.shell: |
            if command -v lastlog > /dev/null; then
              lastlog
            else
              echo "lastlog command not found"
            fi
          register: lastlog
          changed_when: false
          ignore_errors: true # yaml[truthy]

        - name: Get root cron jobs
          ansible.builtin.shell: "crontab -l || echo 'no crontab for root'" # Needs shell due to ||
          register: root_cron
          changed_when: false
          ignore_errors: true # yaml[truthy]

    - name: Gather System Information
      tags: system
      block:
        - name: Get boot time
          ansible.builtin.command: uptime -s # Changed from shell
          register: boot_time
          changed_when: false
          ignore_errors: true # yaml[truthy]

        - name: Get filesystem usage
          ansible.builtin.command: df -h # Changed from shell
          register: fs_usage
          changed_when: false
          ignore_errors: true # yaml[truthy]

    - name: Set host-specific report data with sanitization
      ansible.builtin.set_fact:
        host_report_entry: >
          {{
          {
            inventory_hostname: {
              "hostname": ansible_hostname,
              "ip": (ansible_default_ipv4.address | default('N/A')),
              "os": ansible_distribution ~ " " ~ ansible_distribution_version,
              "uptime": (ansible_uptime_seconds | int // 3600) ~ " hours",
              "boot_time": boot_time.stdout | default('N/A') | regex_replace('\\[\\udc80-\\udcff]', ''),
              "verified_services": (running_services.stdout_lines | default([])),
              "all_services": (services.stdout_lines | default([])),
              "packages": (ansible_facts.packages.keys() | list | default([])),
              "upgradable_packages": (upgradable_packages.stdout_lines | default([])),
              "docker": (docker_containers.stdout_lines | default([])),
              "listening_ports": (listening_ports.stdout_lines | default([])),
              "firewall_rules": (firewall_rules.stdout_lines | default([])),
              "login_history": (lastlog.stdout_lines | default([])),
              "cron_jobs": (root_cron.stdout_lines | default([])),
              "filesystem": (fs_usage.stdout_lines | default([]))
            }
          }
          }}
      changed_when: false

    - name: Write host report to temporary file
      ansible.builtin.copy:
        content: "{{ host_report_entry | to_nice_json }}"
        dest: "{{ report_dir | default('/tmp/reports') }}/{{ inventory_hostname }}_{{ ansible_date_time.iso8601_basic_short }}.report.json"
        mode: '0600' # risky-file-permissions
      delegate_to: localhost
      become: true # yaml[truthy]

# ----------------------------------------

# Play 2: Aggregate and generate the enhanced report

- name: Aggregate and generate combined enhanced report
  hosts: localhost
  connection: local
  gather_facts: true # yaml[truthy]
  tasks:

    - name: Find all temporary report files
      ansible.builtin.find:
        paths: "{{ report_dir | default('/tmp/reports') }}"
        patterns: "*.report.json"
      register: found_reports
      changed_when: false

    - name: Initialize combined report data
      ansible.builtin.set_fact:
        combined_report_data: {}
      changed_when: false

    - name: Merge host reports
      ansible.builtin.set_fact:
        combined_report_data: "{{ combined_report_data | combine(host_report) }}"
      vars: # key-order (vars often comes before module args or with set_fact, it's fine)
        host_report: "{{ lookup('file', item.path) | from_json }}"
      loop: "{{ found_reports.files }}"
      changed_when: false

    - name: Ensure reports directory exists on localhost
      ansible.builtin.file:
        path: "./reports"
        state: directory
        mode: '0755'
      become: false # yaml[truthy]

    - name: Write combined JSON report for reference
      ansible.builtin.copy:
        content: "{{ combined_report_data | to_nice_json }}"
        dest: "./reports/inventory_report_{{ ansible_date_time.iso8601 }}.json"
        mode: '0644' # risky-file-permissions
      become: false # yaml[truthy]

    - name: Write enhanced HTML report
      ansible.builtin.template:
        src: "templates/enhanced_report.html.j2"
        dest: "./reports/inventory_report_{{ ansible_date_time.date }}.html"
        mode: '0644' # risky-file-permissions
      vars:
        report_data: "{{ combined_report_data }}"
      become: false # yaml[truthy]

    - name: Cleanup old report files from temporary directory
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ found_reports.files }}"
      become: true # yaml[truthy]
